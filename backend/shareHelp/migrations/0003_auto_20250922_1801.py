from django.db import migrations

def criar_usuario_anonimo(apps, schema_editor):
    """Cria o usu√°rio an√¥nimo se n√£o existir"""
    try:
        Usuario = apps.get_model('shareHelp', 'Usuario')
        
        usuario_anonimo, created = Usuario.objects.get_or_create(
            username='anonimo',
            defaults={
                'email': 'anonimo@sharehelp.com',
                'nome': 'Usu√°rio An√¥nimo',
                'email_verificado': True,
                'is_active': True,
                'first_name': 'An√¥nimo',
                'last_name': 'ShareHelp'
            }
        )
        
        if created:
            print("‚úÖ Usu√°rio an√¥nimo criado via migration")
        else:
            print("‚ÑπÔ∏è Usu√°rio an√¥nimo j√° existe")
            
    except Exception as e:
        print(f"‚ùå Erro na migration do usu√°rio an√¥nimo: {e}")

def remover_usuario_anonimo(apps, schema_editor):
    """Remove o usu√°rio an√¥nimo (reverso da migration)"""
    try:
        Usuario = apps.get_model('shareHelp', 'Usuario')
        Usuario.objects.filter(username='anonimo').delete()
        print("üóëÔ∏è Usu√°rio an√¥nimo removido")
    except Exception as e:
        print(f"‚ùå Erro ao remover usu√°rio an√¥nimo: {e}")

class Migration(migrations.Migration):
    
    dependencies = [
        ('shareHelp', '0002_alter_doacao_usuario'),  # ‚Üê Ajuste para o n√∫mero da sua √∫ltima migration
    ]

    operations = [
        migrations.RunPython(criar_usuario_anonimo, remover_usuario_anonimo),
    ]